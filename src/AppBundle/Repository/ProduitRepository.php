<?php

namespace AppBundle\Repository;

/**
 * ProduitRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProduitRepository extends \Doctrine\ORM\EntityRepository
{
	    public  function countByProduit($pointVente=null,$startDate=null, $endDate=null,$region=null){
        $qb = $this->createQueryBuilder('p')
        ->leftJoin('p.lignes', 'l')
        ->leftJoin('l.commende', 'c')
        ->leftJoin('c.pointVente', 'pv');
         if($region!=null){
              $qb->andWhere('pv.ville=:ville or pv.ville is NULL')->setParameter('ville', $region);
          }
         if($startDate!=null){
              $qb->andWhere('c.date is NULL or c.date>=:startDate')->setParameter('startDate', new \DateTime($startDate));
          }
          if($endDate!=null){
             $qb->andWhere('c.date is NULL or c.date<=:endDate')->setParameter('endDate',new \DateTime($endDate));
          } 
         /* if($pointVente!=null){
             $qb->andWhere('c.pointVente=:pointVente')->setParameter('pointVente',$pointVente);
          }  */  
          //$qb->andWhere('p.id!=:id')->setParameter('id',2);
          $qb->addOrderBy('p.priority','asc')
          ->select('p.id')
         ->addSelect('p.nom')
         ->addSelect('p.description')
         ->addSelect('sum(l.quantite) as nombre')
         ->addGroupBy('p.id')
         ->addGroupBy('p.nom')
         ->addGroupBy('p.description');
           return $qb->getQuery()->getArrayResult(); 
  }

      public function findOrderedList(){
           $qb = $this->createQueryBuilder('p')->orderBy('p.priority','asc');
         return $qb->getQuery()->getArrayResult();  
       } 
}
